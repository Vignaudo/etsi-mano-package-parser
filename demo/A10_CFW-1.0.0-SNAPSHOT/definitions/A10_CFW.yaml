tosca_definitions_version: tosca_simple_yaml_1_1

description: >
  A10 Convergent Firewall
metadata:
  template_name: MainServiceTemplate
  template_author: vihi1215, amgo0718
  template_version: 1.0.0
  vnfd_id: A10_CFW_1_0_10
  vnf_provider: NetCracker
  vnf_product_name: A10_CFW_1_0_10
  vnf_software_version: 1.0.10
  vnfd_version: 1.0.10
  vnf_product_info_name: A10_CFW_1_0_10
  vnf_product_info_description: A10 Convergent Firewall
  vnf_product_info_features: A10 Convergent Firewall
  localization_language: En
  default_localization_language: En
  required_cpu: 1
  required_mem: 4 GB
  required_storage: 12 GB

imports:
  - netcracker-types: nc-nfv-tosca-types.yaml

artifact_types:

  tosca.artifacts.Implementation.Jinja2:
    derived_from: tosca.artifacts.Implementation
    
group_types:

  A10.groups.nfv.vnfGroup:
    derived_from: netcracker.groups.nfv.VnfGroup

capability_types:

  netcracker.capabilities.nfv.VirtualCompute.A10.CFW_Base:
    derived_from: tosca.capabilities.nfv.VirtualCompute
    properties:
      flavour_id:
        type: string
      local_drive_size:
        type: scalar-unit.size
      virtual_memory:
        type: tosca.datatypes.nfv.VirtualMemory
      virtual_cpu:
        type: tosca.datatypes.nfv.VirtualCpu

node_types:

  netcracker.nodes.nfv.VNF.Plugtest.A10.CFW:
    derived_from: tosca.nodes.nfv.vnfd
    properties:
      dns_primary:
        type: string
      dns_secondary:
        type: string
      glm_token:
        type: string
    requirements:
      - mgmt:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          node: tosca.nodes.nfv.VDU.Compute
          occurrences: [1,1]
      - wan:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          node: tosca.nodes.nfv.VDU.Compute
          occurrences: [1,1]
      - lan:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          node: tosca.nodes.nfv.VDU.Compute
          occurrences: [1,1]
    capabilities:
      A10_CFW_VNF_host:
        type: tosca.capabilities.Container
    interfaces:
      NS:
        type: netcracker.interfaces.node.NetworkService
      NFV:
        type: tosca.interfaces.node.lifecycle.NFV
    attributes:
      a10_mgmt_ip_out:
        type: map
        entry_schema: 
          type: string

  netcracker.nodes.nfv.VDU.Compute.A10.CFW:
    derived_from: tosca.nodes.nfv.VDU.Compute
    properties:
      hostname:
        type: string
        default: A10-CFW
      os_user:
        type: string
        default: admin
      os_password:
        type: string
        default: a10
    capabilities:
      virtual_compute:
        type: netcracker.capabilities.nfv.VirtualCompute.A10.CFW_Base
    interfaces:
      NFV:
        type: tosca.interfaces.node.lifecycle.NFV
      License:
        type: netcracker.interfaces.node.lifecycle.License

topology_template:

  inputs:
    instantiation_level:
      type: string
      required: true
      default: InstantiationLevel1
    dns_primary:
      type: string
      default: 10.112.1.2
    dns_secondary:
      type: string
      default: 8.8.8.8
    glm_token:
      type: string
      default: A10a0a53a94a

    fw_permit_rule_number:
      type: string
      default: 30
    fw_deny_rule_number:
      type: string
      default: 40
    allowed_port:
      type: string
      default: 80
    blocked_port:
      type: string
      default: 22
    nat_pool_start:
      type: string
      default: 192.168.12.100
    nat_pool_end:
      type: string
      default: 192.168.12.100

  outputs:
    a10_mgmt_ip_out:
      description: A10 Management Interface IP
      value: { get_operation_output: [ mgmt_cp_ext, Standard, create, floating_ip_address ] }

  substitution_mappings:
    node_type: netcracker.nodes.nfv.VNF.Plugtest.A10.CFW
    properties:
      vnfd_id: A10_CFW_1_0_10
      deployment_flavour: default
      instantiation_level: [ instantiation_level ]
      dns_primary: [ dns_primary ]
      dns_secondary: [ dns_secondary ]
      glm_token: [ glm_token ]
    capabilities:
      A10_CFW_VNF_host: [ A10_CFW, host ]
    requirements:
      mgmt: [ mgmt_cp_ext, virtual_link ]
      wan: [ wan_cp_ext, virtual_link ]
      lan: [ lan_cp_ext, virtual_link ]
    attributes:
      a10_mgmt_ip_out: [ a10_mgmt_ip_out ]

  node_templates:

    A10_CFW:
      type: netcracker.nodes.nfv.VDU.Compute.A10.CFW
      properties:
        name: A10_CFW
        description: A10 Convergent Firewall
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 2
        virtual_compute:
          properties:
            flavour_id: A10_vThunder
            local_drive_size: 16 GB
            virtual_memory:
              virtual_mem_size: 4 GB
            virtual_cpu:
              num_virtual_cpu: 1
      artifacts:
        sw_image:
          type: tosca.artifacts.nfv.SwImage
          file: http://sdnimages.netcracker.com/VNF/Ecosystem2/ACOS_vThunder4_1_2_P_2-10G.qcow2
          properties:
            name: ACOS_vThunder4_1_2_P_2-10G.qcow2
            version: 1.0
            checksum: 7c962422da9e0bd1a961365fd951f14b
            container_format: BARE
            disk_format: QCOW2
            min_disk: 0 GB
            size: 1.9 GB
            supported_virtualisation_environments:
              - KVM
        init_script:
          type: tosca.artifacts.Implementation.Jinja2
          file: implementation/templates/init_script.yaml
        deny_config:
          type: tosca.artifacts.Implementation.Jinja2
          file: implementation/templates/a10_fw_deny_config.py.j2
        permit_config:
          type: tosca.artifacts.Implementation.Jinja2
          file: implementation/templates/a10_fw_permit_config.py.j2
        interface_config:
          type: tosca.artifacts.Implementation.Jinja2
          file: implementation/templates/a10_interface_config.py.j2
        nat_config:
          type: tosca.artifacts.Implementation.Jinja2
          file: implementation/templates/a10_nat_config.py.j2
        static_route_config:
          type: tosca.artifacts.Implementation.Jinja2
          file: implementation/templates/a10_static_route_config.py.j2
        firewall_config:
          type: tosca.artifacts.Implementation.Ansible
          file: implementation/firewall_config.yaml

      interfaces:
        Standard:
          create:
            inputs:
              config_drive: true
              templates:
                primary_dns_ip: { get_input: dns_primary }
                secondary_dns_ip: { get_input: dns_secondary }
                hostname: { get_attribute: [ SELF, hostname ] }
                token: { get_input: glm_token }
            implementation:
              primary: sw_image
              dependencies: 
                - init_script

          configure:
            inputs:
              ansible_playbook:
                target: { get_attribute: [ SELF, tosca_id ] }
              ansible_inventory:
                ansible_user: { get_attribute: [ SELF, os_user ] }
                ansible_ssh_pass: { get_attribute: [ SELF, os_password ] }
                ansible_host: { get_operation_output: [ mgmt_cp_ext, Standard, create, floating_ip_address ] }
                hostip: { get_operation_output: [ mgmt_cp_ext, Standard, create, floating_ip_address ] }
                username: { get_attribute: [ SELF, os_user ] }
                password: { get_attribute: [ SELF, os_password ] }
                personality: acos
                ethernet_1_desc: Internal
                ethernet_2_desc: External
                fw_ruleset_name: firewall
                wan_iface_ipaddr: { get_operation_output: [ wan_cp_ext, Standard, create, ip_address ] }
                wan_network_prefix: { get_operation_output: [ wan_cp_ext, Standard, create, mask ] }
                lan_iface_ipaddr: { get_operation_output: [ lan_cp_ext, Standard, create, ip_address ] }
                lan_network_prefix: { get_operation_output: [ lan_cp_ext, Standard, create, mask ] }
                wan_gateway: { get_operation_output: [ wan_cp_ext, Standard, create, gateway_ip ] }
                fw_permit_rule_number: { get_input: fw_permit_rule_number }
                fw_deny_rule_number: { get_input: fw_deny_rule_number }
                allowed_port: { get_input: allowed_port }
                blocked_port: { get_input: blocked_port }
                nat_pool_start: { get_input: nat_pool_start }
                nat_pool_end: { get_input: nat_pool_end }
                nat_pool_prefix: { get_operation_output: [ wan_cp_ext, Standard, create, mask ] }
            implementation:
              primary: firewall_config
              dependencies: 
                - deny_config
                - permit_config
                - interface_config
                - nat_config
                - static_route_config

   # Component Connection Points (Management)
    mgmt_cp:
      type: tosca.nodes.nfv.VduCpd
      properties:
        layer_protocol: ipv4
        address_data:
          - 
            address_type: ip_address
            l3_address_data:
              ip_address_assignment: true
              floating_ip_activated: false
      requirements:
        - virtual_binding: A10_CFW

    wan_cp:
      type: tosca.nodes.nfv.VduCpd
      properties:
        layer_protocol: ipv4
        address_data:
          - 
            address_type: ip_address
            l3_address_data:
              ip_address_assignment: true
              floating_ip_activated: false
      requirements:
        - virtual_binding: A10_CFW
        - dependency: mgmt_cp

    lan_cp:
      type: tosca.nodes.nfv.VduCpd
      properties:
        layer_protocol: ipv4
        address_data:
          - 
            address_type: ip_address
            l3_address_data:
              ip_address_assignment: true
              floating_ip_activated: false
      requirements:
        - virtual_binding: A10_CFW
        - dependency: wan_cp

    mgmt_cp_ext:
      type: tosca.nodes.nfv.VnfExtCpd
      properties:
        role: management
        layer_protocol: ipv4
        address_data:
          - 
            address_type: ip_address
            l3_address_data:
              ip_address_assignment: false
              floating_ip_activated: true
      requirements:
        - VduCpd_binding: mgmt_cp

    wan_cp_ext:
      type: tosca.nodes.nfv.VnfExtCpd
      properties:
        role: data-other
        layer_protocol: ipv4
        address_data:
          - 
            address_type: ip_address
            l3_address_data:
              ip_address_assignment: false
              floating_ip_activated: true # To access it from exernal network
      requirements:
        - VduCpd_binding: wan_cp

    lan_cp_ext:
      type: tosca.nodes.nfv.VnfExtCpd
      properties:
        role: data-other
        layer_protocol: ipv4
        address_data:
          - 
            address_type: ip_address
            l3_address_data:
              ip_address_assignment: false
              floating_ip_activated: false
      requirements:
        - VduCpd_binding: lan_cp

  groups:
    # Scaling associatedGroups:
    A10_CFWScalingGroup:
      type: tosca.groups.nfv.VnfdElementGroup
      description:
      members: [ A10_CFW ]
    VNF:    
      type: A10.groups.nfv.vnfGroup
      members: [ A10_CFW ]

  policies:
    # Instantiation Levels:
    - InstantiationLevel1:
        type: tosca.policies.nfv.instantiationlevel
        properties:
          description: Instantiation Level 1
          isDefault: true
          vduLevels:
            A10_CFW:
              numberOfInstances: 1
          scaleInfo:
            A10_CFWScaleAspect:
              scaleLevel: 0

    # Scaling Aspects:
    - A10_CFWScaleAspect:
        type: tosca.policies.nfv.scalingAspect
        properties:
          name: A10_CFW Scaling Aspect
          description:
          maxScaleLevel: 2
        targets: [ A10_CFWScalingGroup ]
        