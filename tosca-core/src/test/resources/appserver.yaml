heat_template_version: ocata

parameters:
  name:
    type: string
  network_id:
    type: string
  subnet_id:
    type: string
  pool_id:
    type: string
  backend_port:
    type: string
  image:
    type: string
  ssh_keys:
    type: comma_delimited_list
  security_groups:
    type: comma_delimited_list
  
  affinity_group:
    type: string
  heatstack_id:
    type: string

resources:
  host:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      metadata:
        stackid: { get_param: heatstack_id }
      user_data_format: RAW
      user_data: { get_resource: cloud-init-config }    
      image: { get_param: image }
      flavor: m1.tiny
      networks:
        - port: { get_resource: port }
      scheduler_hints:
        group: { get_param: affinity_group }

  cloud-init-config:
   # cloud init resource
   type: OS::Heat::CloudConfig
   properties:
     cloud_config:
       manage_etc_hosts: true
       users:
          - name: syseleven
            gecos: SysEleven Stack user
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
            ssh-authorized-keys: { get_param: ssh_keys }
       write_files:
          - content: { get_file: scripts/setup_prometheus_node.sh }
            permissions: '0500'
            path: /root/setup_prometheus_node.sh

       runcmd:
         - [ /root/setup_prometheus_node.sh ]

       packages:
         - curl
         - unzip
         - nginx
             
  port:
    type: OS::Neutron::Port
    properties:
      security_groups: { get_param: security_groups }
      network: { get_param: network_id }

  pool_member:
    type: OS::Neutron::LBaaS::PoolMember
    properties:
      pool: { get_param: pool_id }
      address: { get_attr: [ host, first_address ]}
      protocol_port: { get_param: backend_port }
      subnet: { get_param: subnet_id }
